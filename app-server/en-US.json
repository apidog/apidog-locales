{
  "apiTest": {
    "label.successExample": "Success Example"
  },
  "app": {
    "comma": ", ",
    "success": "Success",
    "error.dataFormatError.websiteHelp": "Data format is incorrect, refer to the help documentation"
  },
  "appLink": {
    "apiInfoUrl": "{appWebEditionUrl}/link/project/{projectId}/apis/api-{id}",
    "webSocketApiInfoUrl": "{appWebEditionUrl}/link/project/{projectId}/apis/websocket-{id}",
    "docInfoUrl": "{appWebEditionUrl}/link/project/{projectId}/apis/doc-{id}",
    "dataSchemaInfoUrl": "{appWebEditionUrl}/link/project/{projectId}/apis/schema-{id}",
    "testReportInfoUrl": "{appWebEditionUrl}/link/project/{projectId}/api-test/test-report/{id}"
  },
  "dataSchema": {
    "rootFolder": "Root"
  },
  "folder": {
    "default": "Default Folder",
    "rootFolder": "Root"
  },
  "httpApi": {
    "unnamed": "Unnamed",
    "response.success": "Success",
    "parameters.example.length.tooLong": "Error: The length of the property 'example' is too long. The maximum length is 10MB.",
    "status.designing": "Designing",
    "status.pending": "Pending",
    "status.developing": "Developing",
    "status.integrating": "Integrating",
    "status.testing": "Testing",
    "status.tested": "Tested",
    "status.released": "Released",
    "status.deprecated": "Deprecated",
    "status.obsolete": "Obsolete",
    "status.exception": "Exception"
  },
  "importExport": {
    "error.partialFailed": "Partial API or data import failed",
    "autoImport.apiOverwriteMode.invalid": "The APl Override Method is not available for the import API, please re-select",
    "autoImport.schemaOverwriteMode.invalid": "The APl Override Method is not available for the import Schema, please re-select",
    "importing.tip": "Another user is currently performing import operations. Please retry later."
  },
  "invitation": {
    "inviteText": "{inviter} has invited you to join a {resourceTypePlainText} {resourceValue} on {appName} {url}",
    "email.restricted": "This feature is restricted, please use the link invitation instead.",
    "team": "team",
    "Team": "Team",
    "project": "project",
    "Project": "Project",
    "invite-user.subject": "{inviterName} has invited you to use {appName}"
  },
  "notice": {
    "user.earnCreditFromInvitation": "You earned {creditAmount} credit for inviting {inviteeName} to {appName}!",
    "user.contributeCreditToTeam": "You applied {creditAmount} credit to team {teamName}.",
    "user.creditWillExpiredNextMonth": "Your {creditAmount} credit will expire next month.",
    "team.userContributeCreditToTeam": "Team {teamName} get {creditAmount} in {appName} credit by {userName}.",
    "team.consumeCreditOnBuyPlan": "{planType} plan for team {teamName} consumed {creditAmount} credits.",
    "team.creditWillExpiredNextMonth": "The {creditAmount} credits of team {teamName} will expire next month.",
    "upgradeSubscriptionPlanReminder": "Upgrade subscription plan reminder",
    "earnCreditFromInvitingUserEmailTitle": "You just received {amount} in {appName} credit",
    "trialStartedReminderEmailTitle": "Start your Free 14-day trial in {appName} NOW!",
    "trialWillExpiredReminderEmailTitle": "Your 14-day Free Trial of {appName} Ending Soon",
    "trialExpiredReminderEmailTitle": "Your Free Trial of {appName} has Ended"
  },
  "notification": {
    "view": "View",
    "api.created.title": "API Created Notice",
    "api.created.content": "Team: {teamName}  \nProject: {projectName}  \nAPI: {name}  \nAPI Path: {path}  \nStatus: {status}  \nMaintainer: {responsibleName}  \n  \nCreated by: {username}  \nCreated at: {operateTime}",
    "api.batchCreated.title": "APIs Multiple Created Notice",
    "api.batchCreated.content": "Team: {teamName}  \nProject: {projectName}  \nAPIs: {name}  \n  \nCreated by: {username}  \nCreated at: {operateTime}",
    "api.updated.title": "API Updated Notice",
    "api.updated.content": "Team: {teamName}  \nProject: {projectName}  \nAPI: {name}  \nAPI Path: {path}  \nStatus: {status}  \nMaintainer: {responsibleName}  \n  \nUpdated by: {username}  \nUpdated at: {operateTime}",
    "api.batchUpdated.title": "APIs Multiple Updated Notice",
    "api.batchUpdated.content": "Team: {teamName}  \nProject: {projectName}  \nAPIs: {name}  \n  \nUpdated by: {username}  \nUpdated at: {operateTime}",
    "api.deleted.title": "API Deleted Notice",
    "api.deleted.content": "Team: {teamName}  \nProject: {projectName}  \nAPI: {name}  \nAPI Path: {path}  \nStatus: {status}  \nMaintainer: {responsibleName}  \n  \nDeleted by: {username}  \nDeleted at: {operateTime}",
    "api.batchDeleted.title": "APIs Multiple Deleted Notice",
    "api.batchDeleted.content": "Team: {teamName}  \nProject: {projectName}  \nAPIs: {name}  \n  \nDeleted by: {username}  \nDeleted at: {operateTime}",
    "dataSchema.created.title": "Schema Created Notice",
    "dataSchema.created.content": "Team: {teamName}  \nProject: {projectName}  \nSchema: {name}  \n  \nCreated by: {username}  \nCreated at: {operateTime}",
    "dataSchema.batchCreated.title": "Schemas Multiple Created Notice",
    "dataSchema.batchCreated.content": "Team: {teamName}  \nProject: {projectName}  \nSchemas: {name}  \n  \nCreated by: {username}  \nCreated at: {operateTime}",
    "dataSchema.updated.title": "Schema Updated Notice",
    "dataSchema.updated.content": "Team: {teamName}  \nProject: {projectName}  \nSchema: {name}  \n  \nUpdated by: {username}  \nUpdated at: {operateTime}",
    "dataSchema.deleted.title": "Schema Deleted Notice",
    "dataSchema.deleted.content": "Team: {teamName}  \nProject: {projectName}  \nSchema: {name}  \n  \nDeleted by: {username}  \nDeleted at: {operateTime}",
    "dataSchema.batchDeleted.title": "Schemas Multiple Deleted Notice",
    "dataSchema.batchDeleted.content": "Team: {teamName}  \nProject: {projectName}  \nSchemas: {name}  \n  \nDeleted by: {username}  \nDeleted at: {operateTime}",
    "doc.created.title": "Document Created Notice",
    "doc.created.content": "Team: {teamName}  \nProject: {projectName}  \nDocument: {name}  \n  \nCreated by: {username}  \nCreated at: {operateTime}",
    "doc.batchCreated.title": "Documents Multiple Created Notice",
    "doc.batchCreated.content": "Team: {teamName}  \nProject: {projectName}  \nDocuments: {name}  \n  \nCreated by: {username}  \nCreated at: {operateTime}",
    "doc.updated.title": "Document Updated Notice",
    "doc.updated.content": "Team: {teamName}  \nProject: {projectName}  \nDocument: {name}  \n  \nUpdated by: {username}  \nUpdated at: {operateTime}",
    "doc.deleted.title": "Document Deleted Notice",
    "doc.deleted.content": "Team: {teamName}  \nProject: {projectName}  \nDocument: {name}  \n  \nDeleted by: {username}  \nDeleted at: {operateTime}",
    "doc.batchDeleted.title": "Documents Multiple Deleted Notice",
    "doc.batchDeleted.content": "Team: {teamName}  \nProject: {projectName}  \nDocuments: {name}  \n  \nDeleted by: {username}  \nDeleted at: {operateTime}",
    "dataImport.completed.title": "Manual Import Data Notice",
    "dataImport.completed.content": "Team: {teamName}  \nProject: {projectName}  \nImported by: {username}  \n  \n- APIs/Docs: {apiCreatedCount} created, {apiUpdatedCount} updated;  \n- Environments: {environmentCreatedCount} created, {environmentUpdatedCount} updated;  \n- Schemas: {dataSchemaCreatedCount} created, {dataSchemaUpdatedCount} updated;  \n- Test Scenario: {testCaseCreatedCount} created, {testCaseUpdatedCount} updated;",
    "automatedDataImport.completed.title": "Auto Sync Data Notice",
    "automatedDataImport.completed.content": "Team: {teamName}  \nProject: {projectName}  \nImported by: {username}  \n  \n- APIs/Docs: {apiCreatedCount} created, {apiUpdatedCount} updated;  \n- Environments: {environmentCreatedCount} created, {environmentUpdatedCount} updated;  \n- Schemas: {dataSchemaCreatedCount} created, {dataSchemaUpdatedCount} updated;  \n- Test Scenario: {testCaseCreatedCount} created, {testCaseUpdatedCount} updated;",
    "testCase.completed.title": "Test Completed",
    "testCase.completed.content": "**Test Scenario: {name}**  \n- Team: {teamName}  \n- Project: {projectName}",
    "testSuite.completed.title": "Test Completed",
    "testSuite.completed.content": "**TestSuite: {name}**  \n- Team: {teamName}  \n- Project: {projectName}",
    "testCaseCi.completed.title": "Test CI/CD Completed",
    "testCaseCi.completed.content": "**Test Scenario: {name}**  \n- Team: {teamName}  \n- Project: {projectName}",
    "test.completed.content.username": "- Tester: {username}",
    "test.completed.content.started": "- Tested at: {started}",
    "test.completed.content.timings": "- Average Request Time: {responseAverage} ms \n- Request Time: {requestTime} s \n- Total Time-consuming: {totalTimeConsume} s",
    "test.completed.content.statistics": "**Test Result**  \n- Total: {total}  \n- Passed: {passed}  \n- Failed: {failed}  \n- Untested: {untested}  \n- Passing Rate: {passingRate}%",
    "content.tooLongTip": "Note: Limited by {service}, the full content cannot be displayed. Please go to {appName} for details."
  },
  "nps": {
    "feedback.survey.v1.title": "How likely are you to recommend {appName} to a friend or colleague?",
    "feedback.survey.v1.feedback": "Where do you want us to improve? (Optional)"
  },
  "payment": {
    "pricing.price.free.title": "Start designing, developing, and testing APIs.",
    "pricing.price.basic.title": "Collaborate with your team to design, develop, and test APIs faster.",
    "pricing.price.professional.title": "Collaborate with your team to design, develop, and test APIs faster.",
    "pricing.user.limit": "All core tooling and collaboration for up to {limit} users.",
    "pricing.user.limit.above": "Full suite of core tools and collaboration features for over {limit} enterprise users",
    "pricing.price.free.feature.design": "API design",
    "pricing.price.free.feature.debugging": "API debugging",
    "pricing.price.free.feature.testing": "API testing",
    "pricing.price.free.feature.doc": "API documentations",
    "pricing.price.free.feature.mock": "API mocking",
    "pricing.price.free.feature.recovery": "API recovery for 7 days",
    "pricing.price.free.feature.history": "API change history for 7 days",
    "pricing.price.basic.feature.collaboration": "Unlimited collaboration for plan members",
    "pricing.price.basic.feature.domains": "3 Custom domains",
    "pricing.price.basic.feature.image": "Image embedding up to 500M",
    "pricing.price.basic.feature.reports": "Test reports storage (online) up to 500M",
    "pricing.price.basic.feature.recovery": "API recovery for 30 days",
    "pricing.price.basic.feature.history": "API change history for 90 days",
    "pricing.price.professional.feature.collaboration": "Unlimited collaboration for plan members",
    "pricing.price.professional.feature.domains": "10 Custom domains",
    "pricing.price.professional.feature.image": "Image embedding up to 1G",
    "pricing.price.professional.feature.reports": "Test reports storage (online) up to 1G",
    "pricing.price.professional.feature.recovery": "API recovery for 60 days",
    "pricing.price.professional.feature.history": "API change history unlimited",
    "plan.feature.tooling.title": "Core Tooling to Design, Develop, and Test APIs",
    "plan.feature.tooling.item.client": "API client",
    "plan.feature.tooling.item.builder": "API builder",
    "plan.feature.tooling.item.testing": "API testing",
    "plan.feature.tooling.item.databases": "Connect to databases",
    "plan.feature.tooling.item.idea": "IDEA plugin",
    "plan.feature.tooling.item.response": "Response validation engine",
    "plan.feature.tooling.item.mock": "API mock server",
    "plan.feature.tooling.item.automate": "API automate testing",
    "plan.feature.tooling.item.public": "Public API documentation",
    "plan.feature.tooling.item.private": "Private API documentation",
    "plan.feature.tooling.item.domains": "Custom domains",
    "plan.feature.tooling.item.recover": "Recover deleted APIs",
    "plan.feature.tooling.item.apiHistory": "API change history",
    "plan.feature.tooling.item.hideLogo": "API documentation hide logo",
    "plan.feature.tooling.item.prioritySupport": "Priority support",
    "plan.feature.tooling.item.desktop": "Mac, Windows, Web and Linux apps",
    "unlimited": "Unlimited",
    "7days": "7 days",
    "30days": "30 days",
    "60days": "60 days",
    "90days": "90 days",
    "plan.feature.collaboration.title": "API Collaboration",
    "plan.feature.collaboration.item.control": "Role-based access control",
    "plan.feature.collaboration.item.projects": "Team projects",
    "plan.feature.collaboration.item.Image": "Image embedding",
    "plan.feature.collaboration.item.reports": "Test reports storage (online)",
    "plan.feature.tooling.item.recover.tips": "The API change history keeps track of changes. You can easily revert to your previous modification history.",
    "plan.feature.tooling.item.apiHistory.tips": "You can restore deleted items from the trash, including interface documents, test cases, data models, etc.",
    "subscription.invoice.coming.email.subject": "Will charge you for {appName} {plan} in 7 days",
    "plan.metadata.title": "Choose Your Team Plan",
    "plan.metadata.subtitle": "Welcome to {appName}, the ultimate API tool. Try it free for 14 days, and cancel anytime you like!"
  },
  "project": {
    "server.default": "Default Server",
    "rpcServer.default": "Default Server"
  },
  "webSocketApi": {
    "unnamed": "Unnamed"
  }
}