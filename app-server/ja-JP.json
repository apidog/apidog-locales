{
  "apiTest": {
    "label.successExample": "成功の例",
    "testData": "テストデータ"
  },
  "app": {
    "comma": "，",
    "jenkins": "Jenkins",
    "slack": "Slack",
    "microsoftTeams": "Teams",
    "inbox": "Inbox",
    "success": "成功",
    "error.dataFormatError.websiteHelp": "データ形式が正しくありません。ヘルプを表示する",
    "gateway.tencentcloud": "Tencent Cloud",
    "modified.successfully": "変更に成功",
    "reset.successfully": "リセットに成功",
    "webhook": "Webhook",
    "email": "Email",
    "endpoint": "API",
    "endpointCase": "API Case",
    "markdown": "文書",
    "schema": "スキーマ",
    "testScenario": "テストシナリオ"
  },
  "appLink": {
    "apiInfoUrl": "{appWebEditionUrl}/link/project/{projectId}/apis/api-{id}?branchId={branchId}",
    "webSocketApiInfoUrl": "{appWebEditionUrl}/link/project/{projectId}/apis/websocket-{id}",
    "socketIOApiInfoUrl": "{appWebEditionUrl}/link/project/{projectId}/apis/socket-io-{id}",
    "docInfoUrl": "{appWebEditionUrl}/link/project/{projectId}/apis/doc-{id}?branchId={branchId}",
    "dataSchemaInfoUrl": "{appWebEditionUrl}/link/project/{projectId}/apis/schema-{id}?branchId={branchId}",
    "testReportInfoUrl": "{appWebEditionUrl}/link/project/{projectId}/api-test/test-report/{id}?branchId={branchId}",
    "commentInfoUrl": "{appWebEditionUrl}/link/project/{projectId}/{entityType}/{entityId}/comment/{id}?branchId={branchId}",
    "apiInfoUrl.main.branch": "{appWebEditionUrl}/link/project/{projectId}/apis/api-{id}",
    "docInfoUrl.main.branch": "{appWebEditionUrl}/link/project/{projectId}/apis/doc-{id}",
    "dataSchemaInfoUrl.main.branch": "{appWebEditionUrl}/link/project/{projectId}/apis/schema-{id}",
    "testReportInfoUrl.main.branch": "{appWebEditionUrl}/link/project/{projectId}/api-test/test-report/{id}"
  },
  "dataSchema": {
    "rootFolder": "ルートフォルダー"
  },
  "environment": {
    "visibility.forbidden": "Mock環境は可視性を変更できません",
    "visibility.privilege": "管理者と環境作成者のみ、環境を非公開に設定できます",
    "envName.development": "開発環境",
    "envName.test": "テスト環境",
    "envName.prod": "本番環境",
    "envName.mock": "ローカルMock",
    "envName.cloudMock": "クラウドMock",
    "envName.selfHostedMock": "セルフホスティングMock",
    "envName.serverMock": "サーバーMock"
  },
  "folder": {
    "default": "デフォルトのフォルダ",
    "rootFolder": "ルートフォルダー"
  },
  "httpApi": {
    "unnamed": "名称未設定",
    "response.success": "成功",
    "parameters.example.length.tooLong": "システム異常：例の長さが制限（10MB）を超えています。修正してください。",
    "status.designing": "設計中",
    "status.pending": "保留中",
    "status.developing": "開発中",
    "status.integrating": "統合中",
    "status.testing": "テスト中",
    "status.tested": "テスト済み",
    "status.released": "リリース済み",
    "status.deprecated": "非推奨",
    "status.obsolete": "廃止済み",
    "status.exception": "例外",
    "requestResult.sizeLimitTip": "このケースのレスポンスBodyデータが大き過ぎるため、アプリを最新バージョンにアップグレードしてご覧ください。",
    "httpCode.shortName.200": "OK",
    "httpCode.shortName.201": "作成済み",
    "httpCode.shortName.202": "承認済み",
    "httpCode.shortName.204": "内容なし",
    "httpCode.shortName.400": "不正な要求",
    "httpCode.shortName.401": "権限なし",
    "httpCode.shortName.403": "アクセス禁止",
    "httpCode.shortName.404": "レコードが存在しない",
    "httpCode.shortName.410": "レコードが存在しない",
    "httpCode.shortName.422": "パラメータエラー",
    "httpCode.shortName.500": "サーバーエラー",
    "httpCode.shortName.502": "ゲートウェイエラー",
    "httpCode.shortName.503": "サーバー障害",
    "httpCode.shortName.504": "ゲートウェイタイムアウト"
  },
  "importExport": {
    "error.partialFailed": "一部のAPIまたはデータがインポートに失敗しました",
    "autoImport.apiOverwriteMode.invalid": "インポートされたAPIはこの上書きモードを使用できません。再度選択してください。",
    "autoImport.schemaOverwriteMode.invalid": "Schemaのインポートには、この上書きモードを使用できません。もう一度選択してください。",
    "importing.tip": "他のユーザーがインポート中です。後で再度お試しください。",
    "export.htmlTitle": "API仕様書 - {appName}",
    "httpApi.unnamed": "名称未設定",
    "customEndpoint.unnamed": "名称未設定",
    "folderId.notFound": "対象のフォルダーが削除されているため、データをインポートできません。別のフォルダを選択してください。"
  },
  "invitation": {
    "inviteText": "{inviter} は、{appName}であなたを{resourceTypePlainText}{resourceValue} に招待しています。{url}",
    "email.restricted": "メール招待機能は使用できなくなり、代わりにリンクで招待してください。",
    "team": "チーム",
    "Team": "チーム",
    "project": "プロジェクト",
    "Project": "プロジェクト",
    "invite-user.subject": "{inviter} はあなたが{appName}を利用しようと招待しています",
    "inviteMember.email.subject": "{inviter}さんから、{appName}の{resourceTypePlainText} {resourceValue}への参加招待が届いています",
    "organization": "組織",
    "Organization": "組織"
  },
  "notice": {
    "user.earnCreditFromInvitation": "新しいユーザー{inviteeName} を招待することで、{creditAmount}米ドルのクレジットを獲得しました。",
    "user.contributeCreditToTeam": "チーム{teamName}に{creditAmount}米ドル分のクレジットを寄付しました",
    "user.creditWillExpiredNextMonth": "来月、{creditAmount}米ドルのクレジットの有効期限が切れる予定です。",
    "team.userContributeCreditToTeam": "チーム{teamName} は、{userName} からの{creditAmount}米ドル分の寄付クレジットがありました。",
    "team.consumeCreditOnBuyPlan": "チーム {teamName}が{planType}へのサブスクリプションは、{creditAmount}米ドル分のクレジットを消費しました。",
    "team.creditWillExpiredNextMonth": "来月、チーム{teamName} の{creditAmount}米ドル分のクレジットは期限切れになります。",
    "upgradeSubscriptionPlanReminder": "リマインダー：サブスクリプションのプランをアップグレード",
    "earnCreditFromInvitingUserEmailTitle": "{amount} の {appName} クレジットを受け取りました",
    "trialStartedReminderEmailTitle": "{appName}の14日間の無料トライアルが開始されています。",
    "trialWillExpiredReminderEmailTitle": "{appName}の無料トライアル期間がまもなく切れます",
    "trialExpiredReminderEmailTitle": "{appName}の無料トライアル期間が切れています",
    "membersAccept": "新しいメンバーが招待を受諾しました",
    "membersReject": "新しいメンバーが招待を拒否しました",
    "membersAccept.tips": "@{p0}が招待を受諾し、チーム「{p1}」に参加しました",
    "membersReject.tips": "@{p0}がチーム「{p1}」に参加を拒否しました",
    "projectMemberAccept.tips": "@{p0}が招待を受諾し、チーム「{p1}」に参加プロジェクト",
    "projectMemberReject.tips": "@{p0}がチーム「{p1}」に参加を拒否プロジェクト",
    "organizationMembersAccept.tips": "@{p0}が招待を受諾し、組織「{p1}」に参加しました",
    "organizationMembersReject.tips": "@{p0}が組織「{p1}」に参加を拒否しました",
    "membersRemove": "チームから削除されました",
    "membersRemove.tips": "管理者によってチーム「{p0}」から削除されました",
    "inviteTeam": "@{p0}がチーム「{p1}」に参加を招待しています",
    "inviteOrganization": "@{inviterName}が組織「{organizationName}」に参加を招待しています",
    "organization.label.accept.message": "組織に参加しました",
    "organization.label.deny.message": "本当に組織に参加を拒否しますか？",
    "inviteProject": "@{p0}がチーム「{p1}」に参加を招待プロジェクト",
    "label.accept": "受諾",
    "label.accept.message": "チームに参加しました",
    "label.deny": "拒否",
    "label.deny.message": "本当にチームに参加を拒否しますか？",
    "label.deny.message.success": "拒否しました",
    "label.rejected": "拒否されました",
    "label.accepted": "受諾されました",
    "mergeRequest.created.legacy": "マージリクエスト #{mergeRequestId} はレビューが必要です",
    "mergeRequest.approved.legacy": "マージリクエスト #{mergeRequestId} は正常にマージされました",
    "mergeRequest.rejected.legacy": "マージリクエスト #{mergeRequestId} はクローズされました",
    "mergeRequest.created": "プロジェクト {projectName} のマージリクエスト：#{mergeRequestId} はレビューが必要です。",
    "mergeRequest.approved": "プロジェクト {projectName} のマージリクエスト #{mergeRequestId} は承認されました。{sourceBranchName} から {targetBranchName} への内容が正常にマージされました。",
    "mergeRequest.rejected": "プロジェクト {projectName} のマージリクエスト #{mergeRequestId} は拒否されました。このマージリクエストはクローズされました。",
    "mergeRequest.review": "表示",
    "userCreditGrantApplication.type.G2.approved": "G2 にレビューを投稿して、7,000円のクレジットを獲得しました！",
    "userCreditGrantApplication.type.X.approved": "X（旧Twitter）にレビューを投稿して、1,400円のクレジットを獲得しました！",
    "userCreditGrantApplication.rejected": "クレジット承認失敗。 — あなたが提出した {type} のレビューが要件を満たしていなかったため、クレジット申請を承認できませんでした。ご不明な点やサポートが必要な場合は、メールでご連絡ください。"
  },
  "notification": {
    "view": "表示",
    "testScenario": "テストシナリオ",
    "scheduledTask": "スケジュールされたタスク",
    "api.created.title": "API作成通知",
    "branch.title.sprint.branch": "スプリントブランチ: ",
    "branch.title.api.version": "APIバージョン: ",
    "api.created.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nAPI: {name}  \nAPIパス: {path}  \nステータス: {status}  \n保守担当者: {responsibleName}  \n  \n作成者: {username}  \n作成日時: {operateTime}",
    "api.batchCreated.title": "複数のAPI作成通知",
    "api.batchCreated.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nAPIs: {name}  \n  \n作成者: {username}  \n作成日時: {operateTime}",
    "api.updated.title": "API更新通知",
    "api.updated.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nAPI: {name}  \nAPIパス: {path}  \nステータス: {status}  \n保守担当者: {responsibleName}  \n  \n更新者: {username}  \n更新日時: {operateTime}",
    "api.batchUpdated.title": "複数のAPI更新通知",
    "api.batchUpdated.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nAPIs: {name}  \n  \n更新者: {username}  \n更新日時: {operateTime}",
    "api.deleted.title": "API削除通知",
    "api.deleted.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nAPI: {name}  \nAPIパス: {path}  \nステータス: {status}  \n保守担当者: {responsibleName}  \n  \n削除者: {username}  \n削除日時: {operateTime}",
    "api.batchDeleted.title": "複数のAPI削除通知",
    "api.batchDeleted.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nAPIs: {name}  \n  \n削除者: {username}  \n削除日時: {operateTime}",
    "dataSchema.created.title": "スキーマ作成通知",
    "dataSchema.created.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nスキーマ: {name}  \n  \n作成者: {username}  \n作成日時: {operateTime}",
    "dataSchema.batchCreated.title": "複数のスキーマ作成通知",
    "dataSchema.batchCreated.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nスキーマ: {name}  \n  \n作成者: {username}  \n作成日時: {operateTime}",
    "dataSchema.updated.title": "スキーマ更新通知",
    "dataSchema.updated.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nスキーマ: {name}  \n  \n更新者: {username}  \n更新日時: {operateTime}",
    "dataSchema.deleted.title": "スキーマ削除通知",
    "dataSchema.deleted.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nスキーマ: {name}  \n  \n削除者: {username}  \n削除日時: {operateTime}",
    "dataSchema.batchDeleted.title": "複数のスキーマ削除通知",
    "dataSchema.batchDeleted.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nスキーマ: {name}  \n  \n削除者: {username}  \n削除日時: {operateTime}",
    "doc.created.title": "文書作成通知",
    "doc.created.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \n文書: {name}  \n  \n作成者: {username}  \n作成日時: {operateTime}",
    "doc.batchCreated.title": "複数の文書作成通知",
    "doc.batchCreated.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \n文書: {name}  \n  \n作成者: {username}  \n作成日時: {operateTime}",
    "doc.updated.title": "文書更新通知",
    "doc.updated.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \n文書: {name}  \n  \n更新者: {username}  \n更新日時: {operateTime}",
    "doc.deleted.title": "文書削除通知",
    "doc.deleted.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \n文書: {name}  \n  \n削除者: {username}  \n削除日時: {operateTime}",
    "doc.batchDeleted.title": "複数の文書削除通知",
    "doc.batchDeleted.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \n文書: {name}  \n  \n削除者: {username}  \n削除日時: {operateTime}",
    "dataImport.completed.title": "手動インポートデータ通知",
    "dataImport.completed.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nインポート完了者：{username}  \n  \n- APIs/Docs: {apiCreatedCount} 作成、 {apiUpdatedCount} 更新;  \n- Environments: {environmentCreatedCount} 作成、 {environmentUpdatedCount} 更新;  \n- Schemas: {dataSchemaCreatedCount} 作成、 {dataSchemaUpdatedCount} 更新;  \n- テストシナリオ: {testCaseCreatedCount} 作成、 {testCaseUpdatedCount} 更新;",
    "automatedDataImport.completed.title": "自動同期データ通知",
    "automatedDataImport.completed.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nインポート完了者：{username}  \n  \n- APIs/Docs: {apiCreatedCount} 作成、 {apiUpdatedCount} 更新;  \n- Environments: {environmentCreatedCount} 作成、 {environmentUpdatedCount} 更新;  \n- Schemas: {dataSchemaCreatedCount} 作成、 {dataSchemaUpdatedCount} 更新;  \n- テストシナリオ: {testCaseCreatedCount} 作成、 {testCaseUpdatedCount} 更新;",
    "testCase.completed.subject": "\"{name}\" テスト完了。",
    "testCase.completed.title": "テスト完了",
    "testCase.completed.content": "**テストシナリオ：{name}**  \n- チーム: {teamName}  \n- プロジェクト: {projectName}  \n- ブランチ/バージョン: {branchName}",
    "testTask.completed.subject": "“{name}” スケジュールされたタスクが完了しました。",
    "testTask.completed.title": "スケジュールされたタスクが完了しました",
    "testTask.completed.content": "**スケジュールされたタスク：{name}**  \n- チーム: {teamName}  \n- プロジェクト: {projectName}  \n- ブランチ/バージョン: {branchName}",
    "testSuite.completed.title": "テスト完了",
    "testSuite.completed.content": "**テストスイート：{name}**  \n- チーム: {teamName}  \n- プロジェクト: {projectName}  \n- ブランチ/バージョン: {branchName}",
    "testCaseCi.completed.subject": "\"{name}\" テスト CI/CD 完了。",
    "testCaseCi.completed.title": "テスト CI/CD 完了",
    "testCaseCi.completed.content": "**テストシナリオ：{name}**  \n- チーム: {teamName}  \n- プロジェクト: {projectName}  \n- ブランチ/バージョン: {branchName}",
    "test.completed.content.username": "- テスター: {username}",
    "test.completed.content.started": "- テスト日時: {started}",
    "test.completed.content.environment": "- 実行環境: {environmentName}",
    "test.completed.content.runsOn": "- インポート元: {source}",
    "test.completed.content.source.client": "クライアント",
    "test.completed.content.source.cloud": "クラウド",
    "test.completed.content.source.runner": "ランナー",
    "test.completed.content.source.cli": "CLI",
    "test.completed.content.timings": "- 平均リクエスト時間: {responseAverage} ms \n- リクエスト時間: {requestTime} s \n- 総所要時間: {totalTimeConsume} s",
    "test.completed.content.statistics": "**テスト結果**  \n- 合計: {total}  \n- 合格: {passed}  \n- 失敗: {failed}  \n- 未テスト: {untested}  \n- 合格率: {passingRate}%",
    "content.tooLongTip": "注意：{service}の制限により、完全な内容は表示されません。詳細は{appName}にてご確認ください。",
    "response.component.created.title": "Response作成の通知",
    "response.component.created.content": "チーム：{teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nResponse: {name}  \n  \n作成者: {username}  \n作成時間: {operateTime}",
    "response.component.updated.title": "Response更新の通知",
    "response.component.updated.content": "チーム：{teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nResponse: {name}  \n  \n更新者: {username}  \n更新時間: {operateTime}",
    "response.component.deleted.title": "Response削除の通知",
    "response.component.deleted.content": "チーム：{teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nResponse: {name}  \n  \n操作者: {username}  \n削除時間: {operateTime}",
    "response.component.batchCreated.title": "複数のResponse作成通知",
    "response.component.batchCreated.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nResponses: {name}  \n  \n作成者: {username}  \n作成日時: {operateTime}",
    "response.component.batchDeleted.title": "複数のResponse削除通知",
    "response.component.batchDeleted.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nResponses: {name}  \n  \n削除者: {username}  \n削除日時: {operateTime}",
    "securityScheme.component.created.title": "Security Scheme作成の通知",
    "securityScheme.component.created.content": "チーム：{teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nSecurity scheme: {name}  \n  \n作成者: {username}  \n作成時間: {operateTime}",
    "securityScheme.component.updated.title": "Security Scheme更新の通知",
    "securityScheme.component.updated.content": "チーム：{teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nSecurity scheme: {name}  \n  \n更新者: {username}  \n更新時間: {operateTime}",
    "securityScheme.component.deleted.title": "Security Scheme削除の通知",
    "securityScheme.component.deleted.content": "チーム：{teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nSecurity scheme: {name}  \n  \n操作者: {username}  \n削除時間: {operateTime}",
    "securityScheme.component.batchCreated.title": "複数のSecurity Scheme作成通知",
    "securityScheme.component.batchCreated.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nSecurity schemes: {name}  \n  \n作成者: {username}  \n作成日時: {operateTime}",
    "securityScheme.component.batchDeleted.title": "複数のSecurity Scheme削除通知",
    "securityScheme.component.batchDeleted.content": "チーム: {teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \nSecurity schemes: {name}  \n  \n削除者: {username}  \n削除日時: {operateTime}",
    "sprint.branch.created.title": "新しいスプリントブランチの作成の通知",
    "sprint.branch.created.content": "チーム：{teamName}  \nプロジェクト: {projectName}  \nスプリントブランチ: {name}  \n  \n作成者: {username}  \n作成時間: {operateTime}",
    "sprint.branch.archived.title": "スプリントブランチのアーカイブの通知",
    "sprint.branch.archived.content": "チーム：{teamName}  \nプロジェクト: {projectName}  \nスプリントブランチ: {name}  \n  \n更新者: {username}  \n更新時間: {operateTime}",
    "sprint.branch.retrieved.title": "スプリントブランチの復元",
    "sprint.branch.retrieved.content": "チーム：{teamName}  \nプロジェクト: {projectName}  \nスプリントブランチ: {name}  \n  \n更新者: {username}  \n更新時間: {operateTime}",
    "sprint.branch.deleted.title": "スプリントブランチの削除",
    "sprint.branch.deleted.content": "チーム：{teamName}  \nプロジェクト: {projectName}  \nスプリントブランチ: {name}  \n  \n操作者: {username}  \n削除時間: {operateTime}",
    "sprint.branch.merged.title": "スプリントブランチをメインブランチにマージ",
    "sprint.branch.merged.content": "スプリントブランチをマージ：{name}  \nチーム：{teamName}  \nプロジェクト: {projectName}  \n  \n更新者: {username}  \n更新時間: {operateTime}   \n  \n- API/ドキュメント：{apiCreateCount} つを追加，{apiUpdateCount} つを更新； \n- Schema： {dataSchemaCreateCount} つを追加，{dataSchemaUpdateCount} つを更新； \n- Responses： {responseComponentCreateCount} つを追加，{responseComponentUpdateCount} つを更新；",
    "api.version.created.title": "新しいAPIバージョンの作成の通知",
    "api.version.created.content": "チーム：{teamName}  \nプロジェクト: {projectName}  \nAPIバージョン: {name}  \n  \n作成者: {username}  \n作成時間: {operateTime}",
    "api.version.deleted.title": "APIバージョンの削除",
    "api.version.deleted.content": "チーム：{teamName}  \nプロジェクト: {projectName}  \nAPIバージョン: {name}  \n  \n操作者: {username}  \n削除時間: {operateTime}",
    "comment.created.subject": "@{username} さんが {projectName} の “{resourceType}-{name}” にコメントを追加しました。",
    "comment.created.title": "新しいコメント",
    "comment.created.content": "チーム：{teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \n{resourceType}: {name}  \n  \n作成者: {username}  \n作成時間: {operateTime}",
    "comment.replied.subject": "@{username} さんが {projectName} の “{resourceType}-{name}”で返信しました。",
    "comment.replied.title": "新しい返信",
    "comment.replied.content": "チーム：{teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \n{resourceType}: {name}  \n  \n作成者: {username}  \n作成時間: {operateTime}",
    "comment.mentioned.subject": "@{username} さんが {projectName} の “{resourceType}-{name}” でメンションしました。",
    "comment.mentioned.title": "新しいメンション",
    "comment.mentioned.content": "チーム：{teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \n{resourceType}: {name}  \n  \n作成者: {username}  \n作成時間: {operateTime}",
    "comment.resolved.subject": "@{username} さんが {projectName} の “{resourceType}-{name}” でコメントを解決しました。",
    "comment.resolved.title": "コメントが解決済み",
    "comment.resolved.content": "チーム：{teamName}  \nプロジェクト: {projectName}  \nブランチ/バージョン: {branchName}  \n{resourceType}: {name}  \n  \n作成者: {username}  \n作成時間: {operateTime}"
  },
  "nps": {
    "feedback.survey.v1.title": "どれぐらい{appName}を同僚/友達にお薦めしてくれませんか？",
    "feedback.survey.v1.feedback": "製品のどこかを改善したいと思いますか？（オプション）"
  },
  "organization": {
    "operation.transfer": "{p0}が{p1}の組織オーナーになります",
    "operation.dismiss": "{p0}が{p1}組織を解散しました ",
    "operation.event.title": "組織アクティビティ"
  },
  "payment": {
    "pricing.price.free.title": "APIの設計、開発およびテストを始めよう！",
    "pricing.price.basic.title": "APIに関連する作業が全て、チームメンバーと協力可能",
    "pricing.price.professional.title": "チームと協力して、APIをより迅速に設計、開発、テストする。",
    "pricing.price.on-premises.title": "ローカル環境にデプロイしてAPIを管理するソリューションで、セキュリティ対策が万全！",
    "pricing.price.on-premises.title.with-link": "ローカル環境にデプロイしてAPIを管理するソリューションで、セキュリティ対策が万全！<a class='ui-link' href='{link}' target='_blank'>詳細</a>",
    "pricing.price.enterprise.title": "APIファーストの開発を大規模に管理、整理、加速するソリューション",
    "pricing.price.feature.title": "{plan}プランの全機能の上に：",
    "pricing.user.limit": "最大{limit}名のメンバーが全コアツールと協同作業機能を利用可能！",
    "pricing.user.limit.above": "{limit}名及びそれ以上のメンバーが全コアツールと協同作業機能を利用可能！",
    "pricing.price.feature.image": "画像埋め込みは最大{value}",
    "pricing.price.feature.reports": "テストレポートのストレージ（オンライン）は最大{value}",
    "pricing.price.feature.collection-runs": "コレクション実行の無制限利用",
    "pricing.price.feature.test-scenario": "テストシナリオのステップとして、他のプロジェクトからエンドポイントをインポートサポートします。",
    "pricing.price.free.feature.design": "APIの設計",
    "pricing.price.free.feature.debugging": "APIのデバッグ",
    "pricing.price.free.feature.testing": "APIのテスト",
    "pricing.price.free.feature.doc": "APIのドキュメント生成",
    "pricing.price.free.feature.mock": "APIのモック",
    "pricing.price.free.feature.recovery": "7日間以内のAPIの復元",
    "pricing.price.free.feature.history": "7日間のAPI変更履歴",
    "pricing.price.free.feature.collaborators": "最大4名のメンバー",
    "pricing.price.free.feature.runners": "タスクスケジュールの実行ステップ数：1万 / 月",
    "pricing.price.free.feature.runners.task.interval": "タスクスケジュールの実行頻度：6時間ごと",
    "pricing.price.free.feature.runner.mock": "セルフホストのモックリクエスト数：10 万 / 月",
    "pricing.price.free.feature.comments": "APIコメント：1 comment / resource",
    "pricing.price.basic.feature.collaboration": "プランメンバー間の協同作業に制限なし",
    "pricing.price.basic.feature.domains": "3つのカスタムドメイン",
    "pricing.price.basic.feature.image": "最大500MBの画像埋め込みをサポート",
    "pricing.price.basic.feature.reports": "最大500MBのオンラインテストレポート",
    "pricing.price.basic.feature.recovery": "30日間以内のAPIの復元",
    "pricing.price.basic.feature.history": "90日間のAPI変更履歴",
    "pricing.price.basic.feature.database": "ClickHouse、MongoDB、Redisデータベースに対応",
    "pricing.price.basic.feature.comments": "APIコメント：1 comment / resource",
    "pricing.price.professional.feature.collaboration": "プランメンバー間の協同作業に制限なし",
    "pricing.price.professional.feature.domains": "10つのカスタムドメイン",
    "pricing.price.professional.feature.image": "最大1GBの画像埋め込みをサポート",
    "pricing.price.professional.feature.reports": "最大1GBのオンラインテストレポート",
    "pricing.price.professional.feature.runner": "タスクスケジュールの実行ステップ数：1000万 / 月",
    "pricing.price.professional.feature.runner.mock": "セルフホストのモックリクエスト数：1000 万 / 月",
    "pricing.price.professional.feature.recovery": "60日間以内のAPIの復元",
    "pricing.price.professional.feature.history": "API変更履歴の永久保存",
    "pricing.price.professional.feature.testScenarioHistory": "テストシナリオ変更履歴:：180日",
    "pricing.price.professional.feature.comments": "APIコメントに制限なし",
    "pricing.price.enterprise.feature.image": "最大2GBの画像埋め込みをサポート",
    "pricing.price.enterprise.feature.reports": "最大2GBのオンラインテストレポート",
    "pricing.price.enterprise.feature.sso": "SSOは、SAML 2.0プロトコルに互換するアイデンティティプロバイダー(IdPs)をサポート。例：Microsoft Entra ID（旧称：Azure Active Directory）",
    "pricing.price.enterprise.feature.runner": "タスクスケジュールの実行ステップ数：制限なし",
    "pricing.price.enterprise.feature.runner.mock": "セルフホストのモックリクエスト数：制限なし",
    "pricing.price.enterprise.feature.mutip-docs-site": "複数のドキュメントサイトをサポートし、公開範囲を選択するオプションがあります。",
    "pricing.price.enterprise.feature.rbac": "プロジェクト役割権限のカスタマイズ",
    "pricing.price.enterprise.feature.testScenariosAssociation": "API/ケースとテストシナリオの関連関係の可視化",
    "pricing.price.enterprise.feature.testScenarioCoverage": "APIケースおよびテストシナリオのカバレッジ統計",
    "pricing.price.enterprise.feature.testScenarioHistory": "テストシナリオ変更履歴:：365日",
    "pricing.price.enterprise.feature.comments": "APIコメントに制限なし",
    "plan.feature.tooling.title": "APIの設計、開発とテストに必要なコアツール",
    "plan.feature.tooling.item.client": "APIのクライアント",
    "plan.feature.tooling.item.builder": "APIのビルダー",
    "plan.feature.tooling.item.testing": "APIのテスト",
    "plan.feature.tooling.item.databases": "データベースへの接続",
    "plan.feature.tooling.item.idea": "IDEAプラグイン",
    "plan.feature.tooling.item.response": "Response検証エンジン",
    "plan.feature.tooling.item.mock": "スマートMockサーバー",
    "plan.feature.tooling.item.cloud-mock": "クラウドMockサーバー",
    "plan.feature.tooling.item.local-mock": "ローカルMockサーバー",
    "plan.feature.tooling.item.self-host-mock": "セルフホストMockサーバー",
    "plan.feature.tooling.item.collection-runs": "コレクション実行",
    "plan.feature.tooling.item.database.sql": "SQLデータベース",
    "plan.feature.tooling.item.database.sql.tips": "MySQL、SQL Server、Oracle、PostgreSQL",
    "plan.feature.tooling.item.database.noSql": "NoSQLデータベース",
    "plan.feature.tooling.item.database.noSql.tips": "ClickHouse、MongoDB、Redis など",
    "plan.feature.tooling.item.public": "パブリックのAPIドキュメント生成",
    "plan.feature.tooling.item.private": "私有のAPIドキュメント生成",
    "plan.feature.tooling.item.domains": "カスタムドメイン",
    "plan.feature.tooling.item.runnerImport": "ランナーによるインポートのスケジュール",
    "plan.feature.tooling.item.runnerTask": "ランナーによるタスクスケジュール",
    "plan.feature.tooling.item.runnerTask.interval": "タスクスケジュールの実行頻度",
    "plan.feature.tooling.item.recover": "削除したAPIの復元期間",
    "plan.feature.tooling.item.apiHistory": "API変更履歴",
    "plan.feature.tooling.item.hidePoweredBy": "「Powered by {appName}」を隠す",
    "plan.feature.tooling.item.hideRunIn": "Hide 'Run in {appName}' Button",
    "plan.feature.tooling.item.singleSignOn": "SSO（SAML）",
    "plan.feature.tooling.item.singleSignOn.tips": "SSOは、SAML 2.0プロトコルに互換するアイデンティティプロバイダー(IdPs)をサポート。例：Microsoft Entra ID（旧称：Azure Active Directory",
    "plan.feature.tooling.item.privateApiHub": "プライベートのAPI Hub",
    "plan.feature.tooling.item.audit-logs": "監査ログ",
    "plan.feature.tooling.item.privateMockServer": "プライベートのクラウドMockサーバー",
    "plan.feature.tooling.item.prioritySupport": "高優先のサポートサービス",
    "plan.feature.tooling.item.multiple-docs-sites": "複数のドキュメントサイトをサポートします",
    "plan.feature.tooling.item.sub-sites-support": "サブサイトは、公開範囲の設定をサポートします",
    "plan.feature.tooling.item.desktop": "Mac、Windows、WebとLinuxアプリ",
    "plan.feature.tooling.item.testScenarioHistory": "テストシナリオ変更履歴",
    "plan.feature.tooling.item.comments": "APIコメント",
    "plan.feature.tooling.item.teamVariables": "チームレベルの共有変数",
    "1commentPerResource": "1 comment / resource",
    "unlimited": "制限なし",
    "10KStepsPreMonth": "1万回の実行ステップ / 月",
    "1MStepsPreMonth": "100万回の実行ステップ / 月",
    "10MStepsPreMonth": "1000万回の実行ステップ / 月",
    "every6hours": "6時間ごと",
    "everyMinute": "毎分1回",
    "7days": "7日間",
    "30days": "30日間",
    "60days": "60日間",
    "90days": "90日間",
    "180days": "180日間",
    "365days": "365日間",
    "perHours": "{value}時間ごと",
    "perMinutes": "{value}分ごと",
    "plan.feature.collaboration.title": "APIの探索と協同作業",
    "plan.feature.collaboration.item.control": "アクセスの中央制御",
    "plan.feature.collaboration.item.scheduled-import-frequency": "予定されたインポートの頻度",
    "plan.feature.collaboration.item.projects": "チームプロジェクト数",
    "plan.feature.collaboration.item.members": "チームメンバー数",
    "plan.feature.collaboration.item.activities": "チーム活動",
    "plan.feature.collaboration.item.Image": "写真の埋め込み",
    "plan.feature.collaboration.item.reports": "オンラインテストのレポート",
    "plan.feature.tooling.item.recover.tips": "削除したAPIの復元：API仕様書（ドキュメント）、テストケース、Schemaなどを含む、削除されたアイテムをゴミ箱から復元できます。",
    "plan.feature.tooling.item.apiHistory.tips": "API変更履歴: API変更履歴は、APIに対する変更を追跡することで、以前のバージョンに簡単に戻すことができます。",
    "subscription.invoice.coming.email.subject": "7 日後に {appName} {plan} の料金が請求されます",
    "plan.metadata.title": "チームプランのご選択",
    "plan.metadata.subtitle": "{appName} - API管理ツールの究極体へようこそ！今すぐ14日間の無料トライアルをしましょう。無料トライアルはいつでもキャンセルできます。",
    "pricing.price.feature.single.sprint.branch.per.project": "1つのブランチ/プロジェクト",
    "pricing.price.feature.sprint.branches.count.per.project": "{count}つのブランチ/プロジェクト",
    "pricing.price.feature.sprint.branches.unlimited": "ブランチ数に制限なし",
    "plan.feature.collaboration.item.sprint.branches": "スプリントブランチ",
    "plan.sprint.branches.count.per.project": "{count}ブランチ/プロジェクト",
    "subscription.update.payment.info.email.subject": "{appName} {plan} の支払いに失敗しました",
    "one-time.subscription.will-end.email.subject": "チーム{teamName}の{appName}の{planName}プランの期限が間もなく切れます。",
    "one-time.subscription.ended.email.subject": "リマインダー：チーム{teamName}の{appName}の{planName}プランの期限が切れました。",
    "plan.type.enterprise": "Enterprise",
    "plan.type.on-premises": "オンプレミス",
    "plan.type.basic": "Basic",
    "plan.type.professional": "Professional",
    "plan.type.free": "Free",
    "pricing.price.professional.feature.teams": "多人数のチームに適切",
    "pricing.price.basic.feature.teams": "少人数のチームに適切",
    "pricing.price.enterprise.feature.teams": "多人数のチームに適切",
    "pricing.price.professional.feature.TeamActivities": "チームのアクティビティを確認",
    "pricing.price.professional.feature.branches": "スプリントブランチ数に制限なし",
    "pricing.price.professional.feature.database": "Damengデータベースをサポート",
    "pricing.price.professional.feature.dubbo": "Dubbo プロジェクトは、アリババクラウド EDAS をサポート",
    "pricing.price.professional.feature.dubbo.script": "Dubbo supports Pre and Post Processors",
    "pricing.price.professional.feature.dataSchemaReference": "データモデルの参照関係を可視化します",
    "pricing.price.professional.feature.runner.cn": "タスクスケジュールの実行ステップ数：1000万 / 月",
    "pricing.price.professional.feature.runner.mock.cn": "セルフホストのモックリクエスト数：1000 万 / 月",
    "pricing.price.professional.feature.HidingTheLogo": "「Run in {appName}」ボタンを隠すをAPIドキュメンテーションでサポートする",
    "price.discount.50%": "時間限定50%オフ",
    "price.discount.20%": "時間限定20%オフ",
    "pricing.price.feature.domains": "{count} つのカスタムドメイン",
    "pricing.price.feature.domains.unlimited": "カスタムドメイン数に制限なし",
    "pricing.price.feature.projects": "{count} チームプロジェクト数",
    "pricing.price.feature.recovery": "{count}日間以内のAPIの復元",
    "pricing.price.feature.history": "{count}日間のAPI変更履歴",
    "pricing.price.feature.on-premises.recovery": "365日間以内のAPIの復元",
    "pricing.price.feature.on-premises.runner": "タスクスケジュールの実行ステップ数：制限なし",
    "pricing.price.feature.on-premises.runner.mock": "セルフホストのモックリクエスト数：制限なし",
    "pricing.price.feature.on-premises.image": "画像埋め込み容量に制限なし",
    "pricing.price.feature.on-premises.reports": "オンラインテストレポートの容量に制限なし",
    "pricing.price.feature.on-premises.sso": "SSOは、SAML 2.0プロトコルに互換するアイデンティティプロバイダー(IdPs)をサポート。例：Microsoft Entra ID（旧称：Azure Active Directory）)",
    "pricing.price.feature.on-premises.ldap": "LDAP、OKTA、OAuth 2.0とOIDCをサポート",
    "pricing.price.feature.history.unlimited": "API変更履歴の永久保存",
    "pricing.price.feature.runner": "タスクスケジュールの実行ステップ数：1万 / 月",
    "pricing.price.feature.recovery.unlimited": "APIの復元制限なし",
    "pricing.price.feature.on-premises.p-mock": "プライベートのクラウドMockサーバー",
    "pricing.price.feature.on-premises.p-apihub": "プライベートのAPI Hub",
    "custom": "カスタム",
    "on-premises": "オンプレミス",
    "plan.feature.core": "{appName}の主要な機能",
    "pricing.price.basic.sprint-branches": "5つのブランチ/プロジェクト",
    "pricing.price.basic.runner.mock": "セルフホストのモックリクエスト数：100 万 / 月",
    "pricing.price.basic.redis": "Redisデータベースをサポート",
    "pricing.price.basic.feature.runner": "タスクスケジュールの実行ステップ数：100万 / 月",
    "pricing.price.basic.feature.runner.task.interval": "タスクスケジュールの実行頻度：毎分1回",
    "pricing.price.basic.feature.runner.mock": "セルフホストのモックリクエスト数：100 万 / 月",
    "pricing.price.basic.team-activities": "チームのアクティビティを確認",
    "pricing.price.scheduled-import": "予定されたインポートの頻度：{value}分ごと",
    "pricing.price.scheduled-import.hours": "スケジュールされたインポートの頻度：{value}時間ごと",
    "requests.per.month": "{count}リクエスト/月",
    "calls.per.month": "{count}コール/月",
    "per.seat": "{price}/席位/{interval}",
    "month": "月",
    "year": "年",
    "Contact the corporate consultant": "サポートセンターにご連絡ください",
    "learnMore": "詳細",
    "upgrade": "アップグレード",
    "trialWillEndAtXDays": "{p0} の {p1} プランは {p2} で終了する予定です。",
    "trialExpired": "{p0} の {p1} プランは終了しました。",
    "subscriptionWillEndAtXDays": "{p0} チームが購入した {p1} プランがまもなく期限が切れます。",
    "subscriptionWillEndAtXDays.organization": "{p0} 組織が購入した {p1} プランがまもなく期限が切れます。",
    "upgradeSuccess": "{p0} チームは、{p1} プランにアップグレードしました。",
    "upgradeSuccess.organization": "{p0} 組織は、{p1} プランにアップグレードしました。",
    "subscriptionEnd": "{p0} チームが購入した {p1} プランの有効期限が切れました。",
    "subscriptionEnd.organization": "{p0} 組織が購入した {p1} プランの有効期限が切れました。",
    "orderPaymentReviewFailed": "{p0}チームがご購入になった{p1}プランの注文は確認できません。プランタブに移動して注文番号を確認するか、新しい注文を行なってください。",
    "orderPaymentReviewFailed.organization": "{p0}組織がご購入になった{p1}プランの注文は確認できません。プランタブに移動して注文番号を確認するか、新しい注文を行なってください。",
    "type.enterprise": "企业版",
    "type.basic": "Basic",
    "type.professional": "Professional",
    "message.error.exited-subscription": "ご利用中のチームはすでに{plan}プランを購読しています。支払いモードを変更するには、まずサブスクリプションをキャンセルする必要があります。新しい注文は、前回の請求サイクルが終了した後に開始されます。",
    "pricing.price.feature.single.api.version.per.project": "1つのバージョン/プロジェクト",
    "pricing.price.feature.api.versions.count.per.project": "{count}つのバージョン/プロジェクト",
    "pricing.price.feature.api.versions.unlimited": "APIバージョン数に制限なし",
    "plan.feature.collaboration.item.api.versions": "APIバージョン",
    "plan.api.versions.count.per.project": "{count}個/プロジェクト"
  },
  "project": {
    "server.default": "デフォルトのサービス",
    "rpcServer.default": "デフォルトサーバー",
    "setting.default.template.id.description": "ID番号",
    "setting.default.template.category.description": "カテゴリー",
    "setting.default.template.name.description": "名前",
    "setting.default.template.tags.description": "タグ",
    "setting.default.template.status.description": "状況",
    "sample.team.name": "個人チーム",
    "sample.project.name": "個人プロジェクト"
  },
  "rbac": {
    "branchManagement": "ブランチ管理",
    "printBranches": "スプリントブランチ",
    "merge": "マージ",
    "apiVersions": "APIバージョン",
    "readSwitch": "読み取り、切り替え",
    "apiManagement": "API管理",
    "apiEndpoints": "API",
    "icecwwcarr": "ユースケース、MD、WS、汎用API、その他関連リソースを含む",
    "readRun": "読み取り、実行",
    "readRef": "読み取り、参照",
    "createUpdateDelete": "作成、更新、削除",
    "generateCode": "コード生成",
    "createUpdateDeleteEndpointCase": "作成、更新、削除エンドポイントケース",
    "schema": "Schema",
    "component": "Component",
    "request": "Request",
    "update": "修正",
    "trash": "ゴミ箱",
    "read": "読み取り",
    "restore": "復元",
    "tests": "自動テスト",
    "testScenario": "テストのシナリオ",
    "readEditLocal": "読み取り、現在の値の編集",
    "readRunFunctionalTests": "読み取り、機能テスト実行",
    "runPerformanceTests": "パフォーマンステスト実行",
    "runOnOtherTools": "外部プログラムで実行",
    "scheduledTasks": "タスクスケジュール",
    "forceDelete": "完全に削除",
    "readRunImmediately": "読み取り、即時実行",
    "testReports": "テストレポート",
    "delete": "削除",
    "environmentManagement": "環境管理",
    "globalVariables": "グローバル変数",
    "globalParams": "グローバルパラメータ",
    "environments": "環境",
    "shareDocs": "共有",
    "publishDocs": "ドキュメント公開",
    "history": "履歴",
    "readPreview": "読み取り、プレビュー",
    "publish": "公開設定",
    "summypbp": "公開設定、基本設定、ページレイアウト設定を含む。",
    "settings": "設定",
    "basicSettings": "基本設定",
    "cloneProject": "プロジェクトを複製",
    "members": "メンバー",
    "inviteManageMembers": "デフォルトのロール管理者のみが招待/メンバー設定機能を使用できます",
    "memberRoleSetupRemove": "メンバーロールの設定/削除",
    "endpointFeatureSettings": "API機能設定",
    "iefsrvsmas": "API機能設定、Response検証設定、Mock設定、高度設定を含む。",
    "notificationTargets": "通知対象",
    "notificationEvents": "通知イベント",
    "commonParameters": "共通パラメータ",
    "publicScripts": "共通Script",
    "createUpdateDeleteArchivist": "作成、更新、削除、アーカイブ、復元",
    "setBranchProtection": "保護",
    "databaseConnections": "データベース接続",
    "gitConnections": "Git接続",
    "socketPacketScripts": "カスタム関数",
    "importData": "データをインポート",
    "importManual": "手動インポート",
    "scheduledImportManualTrigger": "スケジュールされたインポートの手動トリガー",
    "scheduledImportSettings": "スケジュールインポート設定",
    "exportData": "データのエクスポート",
    "requestHistory": "Request履歴",
    "localRequestHistory": "ローカルRequest履歴",
    "sharedRequestHistory": "共通Request履歴",
    "share": "共有",
    "quickShare": "クイック共有",
    "add": "追加",
    "roleTypeNone": "アクセス禁止",
    "roleTypeAdmin": "管理者",
    "roleTypeMaintainer": "編集者",
    "roleTypeReadOnly": "読み取り専用",
    "vaultSecrets": "Vault Secrets",
    "readCreateUpdateDelete": "読み取り、作成、更新、削除",
    "mergeRequest": "マージリクエストの読み取り、作成",
    "protectedBranchResourcesCdu": "保護されたブランチリソースの作成、更新、削除、マージ"
  },
  "recycle": {
    "expire": "ファイルの有効期限が切れました",
    "restore.success": "復元に成功しました",
    "restore.fail": "復元に失敗しました",
    "restore.fail.resource.deleted": "このリソースは完全に削除されているため、復元できません。",
    "httpApi.deleted": "所属的APIドキュメントは既に存在しません",
    "socketService.deleted": "所属のSocketサービスは既に存在しません",
    "socketApi.deleted": "所属のSocket APIは既に存在しません",
    "folder.deleted": "元のフォルダは削除され、ファイルはルートフォルダに復元されました"
  },
  "resourceUsage": {
    "usage.reach90.notice.title": "使用量が10％未満です。",
    "usage.reached.notice.title": "使用量の上限に達しました。",
    "usage.reach90.mail.title": "残量不足に関する通知",
    "usage.reach100.mail.title": "全ての使用量を使い切りました",
    "testScheduledTask": "タスクスケジュールのステップ実行",
    "selfHostedMock": "セルフホストされたモックのリクエスト"
  },
  "samlSso": {
    "organizationNotFound": "組織 {orgName} が見つかりませんでした",
    "configNotConfigured": "この組織はまだSSOを構成していません",
    "noIdentityInformation": "アイデンティティプロバイダーはアイデンティティ情報を返しませんでした",
    "unableToLinkIdentity": "アイデンティティをリンクできません",
    "unableToLinkIdentityContent": "{nameId} SAMLアイデンティティを使用してアイデンティティプロバイダーで認証しようとしていますが、このアイデンティティは、組織内の別の{appName}のユーザーアカウントにすでにリンクされています。{appName}での組織のオーナーに連絡してサポートを求めてください。",
    "domainDoesNotMatchMemberEmail": "このドメインは、どの組織の電子メールもも一致していません。",
    "domainReserved": "申し訳ありませんが、このドメインは許可されていません。",
    "login.memberNotFound": "{nameId} SAMLアイデンティティを使用してアイデンティティプロバイダーで認証しようとしていますが、このアイデンティティは、組織内の無効な{appName}アカウントにすでにリンクされています。{appName}のサポートセンターに連絡してサポートを求めてください。",
    "login.unableToLinkIdentity": "{nameId} SAMLアイデンティティを使用して、{appName}のアカウントにリンクしようとしていますが、このアカウントは、すでに他のSAMLアイデンティティにリンクされています。{appName}での組織のオーナーに連絡してサポートを求めてください。"
  },
  "selfHostedMockCall": {
    "usage.reach90.detail": "セルフホストのMockリクエストの利用可能な使用量が10％未満です。",
    "usage.reached.detail": "セルフホストのMockリクエストが使用量の上限に達しました。セルフホストのMockサービスは利用できなくなります。"
  },
  "serverMock": {
    "error.notFound": "{method} {path} のAPIは存在しません。詳細については、ドキュメントを参照してください：{link}",
    "error.invalidBranch": "Mockをリクエストするスプリントブランチがアーカイブされたか削除されましたので、当該ブランチは見つかりませんでした，詳細については、ドキュメントを参照してください：{link}",
    "error.invalidJson": "Mock ResponseのJSON構成形式が正しくありません",
    "error.conflictPath": "プロジェクト内に、複数のAPIが同じパスを持っているため、競合が発生しました：{method} {path}。代わりにAPI ID方式でMockデータを使用してください。詳細については、ドキュメントを参照してください：{link}",
    "error.conflictPath.identityPattern": "プロジェクト内に、同じパスを持つ複数のAPIがあり、同じユニーク識別子{type}パラメータが{fieldKey}である場合に競合が発生しました。代わりにAPI ID方式でMockデータを使用してください。詳細については、ドキュメントを参照してください：{link}",
    "error.customScriptError": "高度なMock内で、カスタムScriptの実行中にエラーが発生しました。エラーメッセージ：",
    "error.notEnable": "このプロジェクトでは、クラウドMock機能が有効になっていません。プロジェクト設定でこの機能を有効にしてください。詳細については、{link}を参照してください。",
    "error.noToken": "このプロジェクトのクラウドMock機能では、Token認証が有効になっています。RequestパラメータにTokenを含める必要があります。エラーメッセージ：{link}",
    "error.invalidToken": "クラウドMock認証Tokenが正しくありません。確認してください。エラーメッセージ：{link}"
  },
  "team": {
    "operation.transfer": "{p0} が {p1} のチームオーナーになります",
    "operation.dismiss": "{p0}  チームを解散しました {p1}",
    "operation.becomes.admin": "{p0} が {p1} のチーム管理者になります",
    "operation.event.title": "チーム活動"
  },
  "testScheduleTask": {
    "execution.completed": "“{taskName}” スケジュールされたタスクが完了しました。",
    "usage.reach90.detail": "スケジュールされたタスクの実行ステップが使用量の上限に達し、スケジュール通りに実行されなくなります。",
    "usage.reached.detail": "タスクスケジュールのステップ実行の利用料が上限に達していますので、チームのタスクスケジュールが計画通りに実行しないようになります。"
  },
  "user": {
    "ldap.error.email_existed": "このメールアドレスはすでに別のLDAPアカウントに関連付けられています。",
    "email.conflict": "このメールアドレスはすでに登録されています。メールアドレスでログインしてください",
    "welcome.email.subject": "{appName}へようこそ",
    "emailToken.email.subject": "{appName} メール認証コード：{token}",
    "emailVerify.email.subject": "{appName} メール認証コード：{token}",
    "sample.myWorkspace": "個人チーム",
    "sample.myProject": "個人プロジェクト",
    "sample.environmentName": "ペットストア用環境",
    "account.error.exists": "このアカウントはすでに存在します。別のアカウントを選択してください。",
    "resetPassword.email.subject": "パスワードをリセットする",
    "deleteAccount.email.subject": "「{appName}」アカウントが削除されました",
    "authorization.expired": "認証の有効期限が切れました。再度ログインしてください。",
    "password.required": "パスワードを設定してください"
  },
  "webSocketApi": {
    "unnamed": "名称未設定"
  }
}